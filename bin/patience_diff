#!/usr/bin/env ruby
require 'English'
require 'trollop'

lib_path = File.expand_path(File.join(File.dirname(__FILE__),"..","lib"))
$LOAD_PATH.unshift(lib_path)
require 'patience_diff'

begin
  opts = Trollop::options do
    banner <<-EOF.gsub(/^\s*/, '')
      Usage: #{File.basename($0)} [options] left-file right-file (left-file-2 right-file-2 ...)
      Options:
    EOF
    
    version "patience_diff #{PatienceDiff::VERSION}"
    
    opt :debug, "Debugging mode"
    opt :context, "Lines of context", :default => 3
    opt :all_context, "Don't collapse common sections; output entire files. Ignored in html format."
    opt :format, "Specify output format. Currently 'text' and 'html' are supported.", :default => "text"
    opt :ignore_whitespace, 
      "Ignore trailing whitespace, and treat leading whitespace as either present or not. This switch is for compatibility with diff's -b option.",
      :short => '-b'
  end
  
  raise PatienceDiff::UsageError unless ARGV.length and ARGV.length % 2 == 0
  
  differ = case opts[:format]
    when 'text'
      PatienceDiff::Differs::Unified
    when 'html'
      PatienceDiff::Differs::Html
    else
      raise PatienceDiff::UsageError
    end.new(opts)
  
  differ.format do |formatter|
    ARGV.each_slice(2) do |(left_file, right_file)|
      # Read in binary encoding, so that we can diff any encoding and split() won't complain
      left = File.read(left_file, :external_encoding => Encoding::BINARY).split($RS)
      left_timestamp = File.mtime(left_file)
      right = File.read(right_file, :external_encoding => Encoding::BINARY).split($RS)
      right_timestamp = File.mtime(right_file)
      
      formatter.diff(left, right, left_file, right_file, left_timestamp, right_timestamp)
    end
  end.tap do |result|
    puts result
  end
  
rescue PatienceDiff::UsageError => e
  Trollop.module_eval do
    @last_parser.educate($stderr)
  end
rescue StandardError => e
  if opts[:debug]
    raise
  else
    $stderr.puts "Error: #{e}"
  end
end
